{"version":3,"sources":["jQuery.values-1.0.3.min.js"],"names":["$","prop","input","property","check","trim","attr","toLowerCase","normalizeSelectValue","value","i","l","Array","length","splice","undefined","isDisabled","index","element","is","closest","fn","values","result","this","find","add","filter","join","not","each","name","type","inArray","form","push","val","shift","files","split","jQuery"],"mappings":";;;;;;;;;CASC,SAAUA,GACP,YAQA,SAASC,GAAKC,EAAOC,GACjB,GAAIC,GAAQF,EAAMD,KAAKE,EACvB,OAAwB,mBAAVC,GAAwBJ,EAAEK,KAAKH,EAAMI,KAAKH,IAAWI,gBAAkBJ,IAAaC,EAQtG,QAASI,GAAqBC,GAC1B,GAAIC,GAAGC,CACP,IAAIF,YAAiBG,OAAO,CACxB,IAAKF,EAAI,EAAGC,EAAIF,EAAMI,OAAYF,EAAJD,EAAOA,IACT,IAApBD,EAAMC,GAAGG,QACTJ,EAAMK,OAAOJ,EAAG,EAGxB,OAAOD,GAEX,MAAwB,gBAAVA,IAAsBA,EAAMI,OAASJ,EAAQM,OAS/D,QAASC,GAAWC,EAAOC,GACvB,GAAIhB,GAAQF,EAAEkB,EACd,OAAOhB,GAAMiB,GAAG,cAAgBjB,EAAMkB,QAAQ,YAAYD,GAAG,aAOjEnB,EAAEqB,GAAGC,OAAS,WACV,GAAIC,KAiEJ,OA/DAC,MAAKC,KAAK,UACLC,IAAIF,KAAKG,OAAO,WAChBA,QACG,oBACA,qBACA,mBACA,qBACA,kBACA,kBACA,oBACA,uBACA,uBACA,6BACA,mBACA,mBACA,mBACA,oBACA,qBACA,oBACA,oBACA,uBACA,oBACA,mBACA,SACA,YACFC,KAAK,MACNC,IAAIb,GACJc,KAAK,WACF,GAGIrB,GAHAP,EAAQF,EAAEwB,MACVO,EAAO7B,EAAMI,KAAK,SAAW,GAC7B0B,EAAOhC,EAAEK,KAAKH,EAAMiB,GAAG,UAAY,SAAWjB,EAAMiB,GAAG,YAAc,WAAajB,EAAMI,KAAK,SAAW,QAAQC,aAGhHP,GAAEiC,QAAQD,GAAO,WAAY,WAAa,EACtCD,EAAKlB,QACLJ,KACAT,EAAE,eAAiBgC,EAAO,YAAcD,EAAO,aAAcP,KAAKU,MAC7DL,IAAIb,GACJc,KAAK,WACFrB,EAAM0B,KAAKnC,EAAEwB,MAAMY,SAEd,UAATJ,IACAvB,EAAQA,EAAM4B,UAEXnC,EAAMiB,GAAG,cAChBV,EAAQP,EAAMkC,OAEF,WAATJ,EACPvB,EAAQD,EAAqBN,EAAMkC,OACnB,SAATJ,EACPvB,EAAQR,EAAKC,EAAO,YAAcsB,KAAKc,MAAQd,KAAKc,MAAM,IAE1D7B,EAAQP,EAAMkC,MACD,UAATJ,GAAoB/B,EAAKC,EAAO,YAChCO,EAAQA,EAAMI,OAASJ,EAAM8B,MAAM,QACb,IAAjB9B,EAAMI,SACXJ,EAAQM,SAIhBQ,EAAOQ,GAAQtB,IAGhBc,IAGbiB","file":"jQuery.values-1.0.3.min.js","sourcesContent":["/*!\n * jQuery.values\n * jQuery plugin to retrieve form input values\n *\n * @version v1.0.3\n * @link https://github.com/orianda/jQuery.values\n * @author Orianda <orianda@paan.de>\n * @license MIT\n */\n(function ($) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Check property of input element\r\n     * @param {jQuery} input\r\n     * @param {string} property\r\n     * @returns {boolean}\r\n     */\r\n    function prop(input, property) {\r\n        var check = input.prop(property);\r\n        return typeof check === 'undefined' ? $.trim(input.attr(property)).toLowerCase() === property : !!check;\r\n    }\r\n\r\n    /**\r\n     * Filter select value\r\n     * @param {Array|string|null} value\r\n     * @returns {Array|string|undefined}\r\n     */\r\n    function normalizeSelectValue(value) {\r\n        var i, l;\r\n        if (value instanceof Array) {\r\n            for (i = 0, l = value.length; i < l; i++) {\r\n                if (value[i].length === 0) {\r\n                    value.splice(i, 1);\r\n                }\r\n            }\r\n            return value;\r\n        }\r\n        return typeof value === 'string' && value.length ? value : undefined;\r\n    }\r\n\r\n    /**\r\n     * Is the current element disabled?\r\n     * @param {number} index\r\n     * @param {HTMLElement} element\r\n     * @returns {boolean}\r\n     */\r\n    function isDisabled(index, element) {\r\n        var input = $(element);\r\n        return input.is(':disabled') || input.closest('fieldset').is(':disabled');\r\n    }\r\n\r\n    /**\r\n     * Get values of all input fields in this collection and the children.\r\n     * @return {Object}\r\n     */\r\n    $.fn.values = function () {\r\n        var result = {};\r\n\r\n        this.find(':input')\r\n            .add(this.filter(':input'))\r\n            .filter([\r\n                'input:not([type])',\r\n                'input[type=hidden]',\r\n                'input[type=text]',\r\n                'input[type=search]',\r\n                'input[type=tel]',\r\n                'input[type=url]',\r\n                'input[type=email]',\r\n                'input[type=password]',\r\n                'input[type=datetime]',\r\n                'input[type=datetime-local]',\r\n                'input[type=date]',\r\n                'input[type=time]',\r\n                'input[type=week]',\r\n                'input[type=month]',\r\n                'input[type=number]',\r\n                'input[type=range]',\r\n                'input[type=color]',\r\n                'input[type=checkbox]',\r\n                'input[type=radio]',\r\n                'input[type=file]',\r\n                'select',\r\n                'textarea'\r\n            ].join(','))\r\n            .not(isDisabled)\r\n            .each(function () {\r\n                var input = $(this),\r\n                    name = input.attr('name') || '',\r\n                    type = $.trim(input.is('select') ? 'select' : input.is('textarea') ? 'textarea' : input.attr('type') || 'text').toLowerCase(),\r\n                    value;\r\n\r\n                if ($.inArray(type, ['checkbox', 'radio']) >= 0) {\r\n                    if (name.length) {\r\n                        value = [];\r\n                        $('input[type=\"' + type + '\"][name=\"' + name + '\"]:checked', this.form)\r\n                            .not(isDisabled)\r\n                            .each(function () {\r\n                                value.push($(this).val());\r\n                            });\r\n                        if (type === 'radio') {\r\n                            value = value.shift();\r\n                        }\r\n                    } else if (input.is(':checked')) {\r\n                        value = input.val();\r\n                    }\r\n                } else if (type === 'select') {\r\n                    value = normalizeSelectValue(input.val());\r\n                } else if (type === 'file') {\r\n                    value = prop(input, 'multiple') ? this.files : this.files[0];\r\n                } else {\r\n                    value = input.val();\r\n                    if (type === 'email' && prop(input, 'multiple')) {\r\n                        value = value.length ? value.split(',') : [];\r\n                    }else if(value.length === 0){\r\n                        value = undefined;\r\n                    }\r\n                }\r\n\r\n                result[name] = value;\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n}(jQuery));"],"sourceRoot":"/source/"}